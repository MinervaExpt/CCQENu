scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p5 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,3,0.2)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p6 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,3,0.2),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
ggarrange(p1, p2, p3, p4, p5, p6, ncol=2, nrow=3, common.legend = TRUE, legend="right")
rm(p1,p2,p3,p4,p5,p6)
p1 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p2 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p3 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p4 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p5 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p6 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
ggarrange(p1, p2, p3, p4, p5, p6, ncol=2, nrow=3, common.legend = TRUE, legend="right")
rm(p1,p2,p3,p4,p5,p6)
library(randomForest)
isntall.packages("randomForest")
install.packages("randomForest")
library(randomForest)
stdvar[index,]
stdvar[index,c(6:10,12:14)]
stdvar[index,c(6:9,11:13)]
stdvar[index,c(5:9,11:13)]
rf <- randomForest(Particle ~ ., data = stdvar[index,c(5:9,11:13)], proximity = T)
stdvar[index,c(5:9,11:13)]
stdvar[index,c(5:9,11:13)] %>% count(Particle)
stdvar[index,c(5:9,11:13)]
rf <- randomForest(Particle ~ ., data = stdvar[index,c(5:9,11:13)], proximity = T)
stdvar[index,c(5:9,11:13)] %>% count(is.na(Particle))
stdvar[index,c(5:9,11:13)] %>% count()
stdvar[index,c(5:9,11:13)] %>% count(is.na())
stdvar[index,c(5:9,11:13)]
stdvar[index,c(5:9,11:13)] %>% count(is.na(ProtonScore1))
na.omit(stdvar[index,c(5:9,11:13)])
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:9,11:13)]), proximity = T)
stdvar$Particle <- as.factor(stdvar$Particle)
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:9,11:13)]), proximity = T)
na.omit(stdvar[index,c(5:9,11:13)])
na.omit(stdvar[index,c(5:9,11:12)])
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:9,11:12)]), proximity = T)
na.omit(stdvar[index,c(5:9,11:12)])
na.omit(stdvar[index,c(5:8,11:12)])
na.omit(stdvar[index,c(5:7,11:12)])
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:7,11:12)]), proximity = T)
na.omit(stdvar[index,c(5:7,11:12)])
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:7)]), proximity = T)
memory.limit()
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:7)]), proximity = T)
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:7)]), ntree=50)
na.omit(stdvar[index,c(5:9,11:12)])
na.omit(stdvar[index,c(5:9,11:13)])
rf <- randomForest(Particle ~ ., data = na.omit(stdvar[index,c(5:9,11:13)]), ntree=50)
stdvar <- na.omit(stdvar)
confusionMatrix(predict(rf, stdvar[index,c(5:9,11:13)]$Particle))
stdvar
stdvar[index,c(5:9,11:13)]
stdvar <- stdvar %>% mutate("IsProton" = if_else(Particle=="Proton",1,0))
stdvar <- na.omit(stdvar)
index <- sample(1:nrow(stdvar),ceiling(nrow(stdvar)*0.8))
library(mgcv)
gam_0 <- gam(IsProton ~
s(ProtonScore1,bs = 'cr') +
s(PVGap,bs = 'cr') +
s(zvtx,bs = 'cr') +
s(recoil,bs = 'cr') +
s(TotalE,bs = 'cr') +
s(Angle,bs = 'cr') +
Multiplicity,
data = stdvar[index,],
family = binomial(link="logit"))
pred_gam <- predict(gam_0, newdata = stdvar[-index,], type="response")
cm_gam <- as.matrix(table(Actual=stdvar[-index,]$IsProton, Predicted=pred_gam > 0.5))
p1 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(PrimaryProtonScore1, fill = Comparison)) +
geom_histogram(breaks = seq(0,1,0.05)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p2 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(PrimaryProtonScore1, fill = Comparison)) +
geom_histogram(breaks = seq(0,1,0.05),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p3 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(PrimaryProtonScore1, fill = Comparison)) +
geom_histogram(breaks = seq(0,1,0.05)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p4 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(PrimaryProtonScore1, fill = Comparison)) +
geom_histogram(breaks = seq(0,1,0.05),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p5 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(PrimaryProtonScore1, fill = Comparison)) +
geom_histogram(breaks = seq(0,1,0.05)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p6 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(PrimaryProtonScore1, fill = Comparison)) +
geom_histogram(breaks = seq(0,1,0.05),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
ggarrange(p1, p2, p3, p4, p5, p6, ncol=2, nrow=3, common.legend = TRUE, legend="right")
rm(p1,p2,p3,p4,p5,p6)
p1 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(EnuCCQE, fill = Comparison)) +
geom_histogram(breaks = seq(0,15,1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p2 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(EnuCCQE, fill = Comparison)) +
geom_histogram(breaks = seq(0,15,1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p3 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(EnuCCQE, fill = Comparison)) +
geom_histogram(breaks = seq(0,15,1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p4 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(EnuCCQE, fill = Comparison)) +
geom_histogram(breaks = seq(0,15,1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p5 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(EnuCCQE, fill = Comparison)) +
geom_histogram(breaks = seq(0,15,1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p6 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(EnuCCQE, fill = Comparison)) +
geom_histogram(breaks = seq(0,15,1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
ggarrange(p1, p2, p3, p4, p5, p6, ncol=2, nrow=3, common.legend = TRUE, legend="right")
rm(p1,p2,p3,p4,p5,p6)
p1 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(log(Q2QE+0.001), fill = Comparison)) +
geom_histogram(breaks = seq(-5,3,0.5)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p2 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(log(Q2QE+0.001), fill = Comparison)) +
geom_histogram(breaks = seq(-5,3,0.5),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p3 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(log(Q2QE+0.001), fill = Comparison)) +
geom_histogram(breaks = seq(-5,3,0.5)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p4 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(log(Q2QE+0.001), fill = Comparison)) +
geom_histogram(breaks = seq(-5,3,0.5),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p5 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(log(Q2QE+0.001), fill = Comparison)) +
geom_histogram(breaks = seq(-5,3,0.5)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p6 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(log(Q2QE+0.001), fill = Comparison)) +
geom_histogram(breaks = seq(-5,3,0.5),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
ggarrange(p1, p2, p3, p4, p5, p6, ncol=2, nrow=3, common.legend = TRUE, legend="right")
rm(p1,p2,p3,p4,p5,p6)
p1 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p2 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p3 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p4 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Particle == "Proton") %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p5 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1)) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
p6 <- events[stdvar[-index,]$id,] %>% mutate(Prediction = (pred_gam > 0.5)*1) %>%
filter(!is.na(Prediction)) %>% filter(Prediction == 1) %>%
mutate(Comparison = paste0("t",(Particle == "Proton")*1,"_p",Prediction*1)) %>%
mutate(Comparison = factor(Comparison, levels = c("t0_p0","t0_p1","t1_p0","t1_p1"))) %>%
ggplot(aes(ptmu, fill = Comparison)) +
geom_histogram(breaks = seq(0,2,0.1),position = 'fill', aes(y=..count../sum(..count..))) +
scale_fill_manual(values = c("t1_p1"="#0085ad","t0_p0"="#af272f","t0_p1"="#4c8c2b","t1_p0"="#eaaa00")) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = expansion(mult = c(0, .05))) +
theme_bw()
ggarrange(p1, p2, p3, p4, p5, p6, ncol=2, nrow=3, common.legend = TRUE, legend="right")
rm(p1,p2,p3,p4,p5,p6)
rf <- randomForest(Particle ~ ., data = stdvar[index,c(5:9,11:13)], ntree=50)
confusionMatrix(predict(rf, stdvar[index,c(5:9,11:13)]$Particle))
confusionMatrix(predict(rf, stdvar[index,c(5:9,11:13)]), stdvar[index,c(5:9,11:13)]$Particle))
confusionMatrix(predict(rf, stdvar[index,c(5:9,11:13)]), stdvar[index,c(5:9,11:13)]$Particle)
confusionMatrix(predict(rf, stdvar[-index,c(5:9,11:13)]), stdvar[-index,c(5:9,11:13)]$Particle)
library(randomForest)
stdvar$Particle <- as.factor(stdvar$Particle)
rf <- randomForest(Particle ~ ., data = stdvar[index,c(5:9,11:13)], ntree=30)
confusionMatrix(predict(rf, stdvar[index,c(5:9,11:13)]), stdvar[index,c(5:9,11:13)]$Particle)
confusionMatrix(predict(rf, stdvar[-index,c(5:9,11:13)]), stdvar[-index,c(5:9,11:13)]$Particle)
confusionMatrix(predict(rf, stdvar[-index,c(5:9,11:13)]), stdvar[-index,c(5:9,11:13)]$Particle)
stdvar
stdvar <- stdvar %>% mutate("IsProton" = if_else(Particle=="Proton","Yes","No"))
stdvar
rf1 <- randomForest(Particle ~ ., data = stdvar[index,] %>% select(IsProton,ProtonScore1,PVGap,zvtx,recoil,RatioLE,Angle,Multiplicity), ntree=30)
rf1 <- randomForest(Particle ~ ., data = stdvar[index,] %>% select(Particle,ProtonScore1,PVGap,zvtx,recoil,RatioLE,Angle,Multiplicity), ntree=30)
rf2 <- randomForest(Particle ~ ., data = stdvar[index,] %>% select(IsProton,ProtonScore1,PVGap,zvtx,recoil,TotalE,Angle,Multiplicity), ntree=30)
rf2 <- randomForest(Particle ~ ., data = stdvar[index,] %>% select(Particle,ProtonScore1,PVGap,zvtx,recoil,TotalE,Angle,Multiplicity), ntree=30)
rm(rf)
confusionMatrix(predict(rf1, stdvar[index,] %>% select(Particle,ProtonScore1,PVGap,zvtx,recoil,RatioLE,Angle,Multiplicity)),
stdvar[index,] %>% pull(Particle))
confusionMatrix(predict(rf2, stdvar[index,] %>% select(Particle,ProtonScore1,PVGap,zvtx,recoil,TotalE,Angle,Multiplicity)),
stdvar[index,] %>% pull(Particle))
confusionMatrix(predict(rf1, stdvar[-index,] %>% select(Particle,ProtonScore1,PVGap,zvtx,recoil,RatioLE,Angle,Multiplicity)),
stdvar[-index,] %>% pull(Particle))
confusionMatrix(predict(rf2, stdvar[-index,] %>% select(Particle,ProtonScore1,PVGap,zvtx,recoil,TotalE,Angle,Multiplicity)),
stdvar[-index,] %>% pull(Particle))
rf1 <- randomForest(IsProton ~ ., data = stdvar[index,] %>% select(IsProton,ProtonScore1,PVGap,zvtx,recoil,RatioLE,Angle,Multiplicity), ntree=30)
stdvar <- stdvar %>% mutate("IsProton" = if_else(Particle=="Proton","Yes","No"))
rf1 <- randomForest(IsProton ~ ., data = stdvar[index,] %>% select(IsProton,ProtonScore1,PVGap,zvtx,recoil,RatioLE,Angle,Multiplicity), ntree=30)
stdvar <- stdvar %>% mutate("IsProton" = if_else(Particle=="Proton",1,0))
rf1 <- randomForest(IsProton ~ ., data = stdvar[index,] %>% select(IsProton,ProtonScore1,PVGap,zvtx,recoil,RatioLE,Angle,Multiplicity), ntree=30)
my_fn <- function(data, mapping, ...){
# Using default ggplot density function
p <- ggplot(data = data, mapping = mapping) +
stat_density2d(aes(fill=..density..), geom="tile", n=20, contour = FALSE) +
scico::scale_fill_scico(palette = "vik")
p
}
ggpairs(events %>%
dplyr::select(qelikeBDTG,`1chargedpionBDTG`,`1neutralpionBDTG`,
multipionBDTG,otherBDTG,Truth) %>%
filter(Truth == "qelike"), columns = 1:5, lower=list(continuous=my_fn)) +
theme_bw() + ggtitle("qelike")
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(knitr)
library(kableExtra)
library(GGally)
library(viridis)
library(fitdistrplus)
library(purrr)
library(ggforce)
library(ggpattern)
library(xgboost)
library(caret)
library(Ckmeans.1d.dp)
library(archdata)
percent <- function(x, digits = 2, format = "f", ...) {
paste0(formatC(x * 100, format = format, digits = digits, ...), "\\%")
}
events <- read.csv("CSV_CCQENu_minervame1N_MC_Inextinguishable_merged.csv", sep=";")
events <- events[,c(1,51,52,54:59,63:66)]
colnames(events)[c(5,6)] = c("1chargedpionBDTG","1neutralpionBDTG")
events$Truth = gsub("Mult1p___", "", events$Truth)
cbind(colnames(events))
events %>%
ggplot(aes(qelikeBDTG,fill=Truth,color=Truth)) +
geom_histogram(colour = "black", position = 'fill', aes(y=..count../sum(..count..)), binwidth = 0.05) +
theme_bw() +
ggtitle("qelikeBDTG") +
scale_x_continuous(breaks = seq(0,1,0.1), expand = c(0,0), limits = c(-0.025,1.025)) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
facet_wrap(vars(model),scales="free_y", ncol=1)
events %>%
ggplot(aes(`1chargedpionBDTG`,fill=Truth,color=Truth)) +
geom_histogram(colour = "black", position = 'fill', aes(y=..count../sum(..count..)), binwidth = 0.05) +
theme_bw() +
ggtitle("1chargedpionBDTG") +
scale_x_continuous(breaks = seq(0,1,0.1), expand = c(0,0), limits = c(-0.025,1.025)) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
facet_wrap(vars(model),scales="free_y", ncol=1)
events %>%
filter(`1chargedpionBDTG`>0.4) %>%
ggplot(aes(qelikeBDTG,fill=Truth,color=Truth)) +
geom_histogram(colour = "black", position = 'fill', aes(y=..count../sum(..count..)), binwidth = 0.05) +
theme_bw() +
ggtitle("qelikeBDTG: {1chargedpionBDTG > 0.4}") +
scale_x_continuous(breaks = seq(0,1,0.1), expand = c(0,0), limits = c(-0.025,1.025)) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
facet_wrap(vars(model),scales="free_y", ncol=1)
events %>%
filter(`1chargedpionBDTG`>0.4) %>%
filter(`1neutralpionBDTG`<0.5) %>%
ggplot(aes(qelikeBDTG,fill=Truth,color=Truth)) +
geom_histogram(colour = "black", position = 'fill', aes(y=..count../sum(..count..)), binwidth = 0.05) +
theme_bw() +
ggtitle("qelikeBDTG: {1chargedpionBDTG > 0.4 & 1neutralpionBDTG < 0.5}") +
scale_x_continuous(breaks = seq(0,1,0.1), expand = c(0,0), limits = c(-0.025,1.025)) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
facet_wrap(vars(model),scales="free_y", ncol=1)
events %>%
ggplot(aes(`1neutralpionBDTG`,fill=Truth,color=Truth)) +
geom_histogram(colour = "black", position = 'fill', aes(y=..count../sum(..count..)), binwidth = 0.05) +
theme_bw() +
ggtitle("1neutralpionBDTG") +
scale_x_continuous(breaks = seq(0,1,0.1), expand = c(0,0), limits = c(-0.025,1.025)) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
facet_wrap(vars(model),scales="free_y", ncol=1)
events %>%
ggplot(aes(multipionBDTG,fill=Truth,color=Truth)) +
geom_histogram(colour = "black", position = 'fill', aes(y=..count../sum(..count..)), binwidth = 0.05) +
theme_bw() +
ggtitle("multipionBDTG") +
scale_x_continuous(breaks = seq(0,1,0.1), expand = c(0,0), limits = c(-0.025,1.025)) +
scale_y_continuous(expand = expansion(mult = c(0, .1))) +
facet_wrap(vars(model),scales="free_y", ncol=1)
gc()
